@use "../shared/Colors" as *;
@use "../shared/Styles" as *;
@use "../shared/Variables" as *;

$componentGap: 1rem;
$buttonGap: .25rem;
$themeColor: $themeRed;

@mixin halfAndAlignCenter {
    height: 50%;
    align-self: center;
}

.calculatorinator {
    //@include fitContainer();
    position: fixed; //position fixed with height 100% is required for mobile device browsers with address bars that change visibility
    top: 0;
    left: 0;
    height: 100%;
    width: 100vw;
    box-sizing: border-box;
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(6, 1fr);
    gap: 1rem;
    padding: 1rem;

    .button {
        background-color: $themeColor;
    }

    #answerArea {
        grid-column: 1 / 6;

    }

    #clear {
        grid-column: 1 / 4;
        @include halfAndAlignCenter();
    }

    #back {
        grid-column: 4 / 6;
        @include halfAndAlignCenter();
    }

    #multiply {
        height: 75%;
        grid-row: 3 / 5;
        grid-column: 4 / 5;
    }

    #divide {
        height: 75%;
        grid-row: 3 / 5;
        grid-column: 5 / 6;
    }

    #add {
        height: 150%;
        margin-top: -100%;
        grid-column: 4/5;
        grid-row: 5/5;
    }

    #subtract {
        height: 150%;
        margin-top: -100%;
        grid-column: 5/6;
        grid-row: 5/5;
    }

    #zero {
        grid-column: 1/2;
        @include halfAndAlignCenter();
        margin-bottom: 3rem;
    }

    #dot {
        grid-column: 2/3;
        @include halfAndAlignCenter();
        margin-bottom: 3rem;
    }

    #exponent {
        grid-column: 3/4;
        @include halfAndAlignCenter();
        margin-bottom: 3rem;
    }

    #solve {
        grid-column: 4/6;
        @include halfAndAlignCenter();
        margin-bottom: 3rem;
    }

    .beeIcon {
        display: none;
    }

    .answerArea {
        border: 4px solid $themeColor;
        border-radius: $mainCornerSize;
        padding: .5rem;
        box-sizing: border-box;
        height: 50%;
        align-self: end;
        //width: 100%;
        //min-height: 41.6px;//one line with padding
        display: flex;
        align-items: center;
        //justify-content: center;
    }

    .menuContainer {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        z-index: 2;

        img {
            //height: 40px;
            width: 3rem;
            z-index: 1;
            position: relative;
            //margin-left: 4px;
            //margin-top: 4px;
            left: .5rem;
            top: .1rem;

            &:hover {
                cursor: pointer;
            }
        ;
        }

        .menu {
            transition: .5s;
            transition-timing-function: ease-in-out;
            //padding-top: 80px;
            padding: 80px .5rem;

            &.hide {
                //display: none;
                //transform: translateY(-100px);
                //transform: translate(120px, 50%);
                transform: translateX(-100vw);
            }

            width: 100Vw;
            height: 100vh;
            position: absolute;
            top: 0;
            left: 0;
            //https://stackoverflow.com/questions/27583937/how-can-i-make-a-css-glass-blur-effect-work-for-an-overlay
            background: rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(5px);

            display: flex;
            flex-direction: column;
            //align-items: center;
            gap: .5rem;

            .colorOptions {
                width: 80%;
                height: 50px;
                font-size: 1rem;
                border-radius: 4px;
            }

            .bored {
                display: flex;
                flex-direction: column;
                gap: .5rem;

                .button {
                    width: 50%;
                }
            }
        }
    }

    //desktop styles
    @media (width > $breakpointDesktop) {
        width: 50vw;
        height: 50vh;
        position: inherit; //position inherit in order to allow this item to fit in a flex container on desktop :p

        //create a calculator looking border ;P
        border: 4px solid grey;
        border-radius: $mainCornerSize;
        background-color: black;

        .button {
            height: auto;
            width: auto;
            padding: 0;
        }

        .menuContainer {
            .menu {
                .bored {
                    .button {
                        width: 200px;
                        padding: .5rem;
                    }
                }
                .colorOptions{
                    width: 200px;
                }
            }
            .customColorInput{
                width: 200px;
            }
        }

        #clear {
            height: 100%;
        }
        #back {
            height: 100%;
        }

        #one {
            grid-column: 1/2;
        }

        #add {
            margin: 0;
            height: 100%;
            grid-row: 4/5;
        }
        #subtract {
            margin: 0;
            height: 100%;
            grid-row: 4/5;
        }

        #multiply {
            height: 100%;
            grid-row: 3/4;
        }
        #divide {
            height: 100%;
            grid-row: 3/4;
        }

        #zero {
            margin: 0;
            height: 100%;
        }

        #dot {
            margin: 0;
            height: 100%;
        }

        #exponent {
            margin: 0;
            height: 100%;
        }

        #solve {
            margin: 0;
            height: 100%;
            grid-row: 5/6;
        }
    }
    //end media query


    //theme management
    &.themeBlue {
        .button {
            background-color: $themeBlue;
        }

        .answerArea {
            border-color: $themeBlue;
        }
    }

    &.themeGreen {
        .button {
            background-color: $themeGreen;
        }

        .answerArea {
            border-color: $themeGreen;
        }
    }

    &.themePurple {
        .button {
            background-color: $themePurple;
        }

        .answerArea {
            border-color: $themePurple;
        }
    }

    &.themeRed {
        .button {
            background-color: $themeRed;
        }

        .answerArea {
            border-color: $themeRed;
        }
    }

    &.themePink {
        .button {
            background-color: $themePink;
        }

        .answerArea {
            border-color: $themePink;
        }
    }

    &.themeOrange {
        .button {
            background-color: $themeOrange;
        }

        .answerArea {
            border-color: $themeOrange;
        }
    }

    &.themeCustom {
        .button {
            background-color: var(--userColor, $themeColor);
            color: var(--fontColor, white);
        }

        .answerArea {
            border-color: var(--userColor, $themeColor);
        }
    }
}
